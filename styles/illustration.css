@tailwind components;

.favicon {
  & > path {
    stroke: hsl(var(--yz13-foreground));
    fill: hsl(var(--yz13-neutral-400));
  }
}

#illustration {
  --spacing: 24px;
  height: 100%;

  grid-template-areas:
    "a a d d"
    "b b b b"
    "c c c c"
    "e e e e";

  @media (min-width: 1024px) {
    grid-template-areas:
      "a a d d"
      "b b b b"
      "c c c c"
      "e e e e";
  }
  @media (min-width: 1280px) {
    grid-template-areas:
      "a b b b"
      "c c c d"
      "e e e e"
      "e e e e";
  }

  & div:nth-child(1) {
    grid-area: a;
    & > svg {
      & rect {
        stroke: transparent;
      }
      & path {
        stroke: hsl(var(--yz13-foreground));
        fill: hsl(var(--yz13-neutral-400));
        @apply transition-colors;
      }
      & path:hover {
        fill: hsl(var(--yz13-neutral-600));
      }
    }
  }
  & div:nth-child(2) {
    grid-area: b;
    & > svg {
      & line {
        stroke: hsl(var(--yz13-foreground));
      }
      & rect {
        stroke: transparent;
      }
      & path,
      circle {
        stroke: hsl(var(--yz13-foreground));
        fill: hsl(var(--yz13-neutral-400));
        @apply transition-colors;
      }
      & path:hover {
        fill: hsl(var(--yz13-neutral-600));
      }
    }
  }
  & div:nth-child(3) {
    grid-area: c;
    & > svg {
      & rect {
        stroke: transparent;
      }
      & path {
        fill: hsl(var(--yz13-neutral-400));
        @apply transition-colors;
      }
      & path:hover {
        fill: hsl(var(--yz13-foreground));
      }
      & path:first-of-type {
        fill: hsl(var(--yz13-foreground));
        @apply transition-colors;
      }
      & path:first-of-type:hover {
        fill: hsl(var(--yz13-neutral-400));
      }
      & path:last-of-type {
        fill: hsl(var(--yz13-foreground));
        @apply transition-colors;
      }
      & path:last-of-type:hover {
        fill: hsl(var(--yz13-neutral-400));
      }
    }
  }
  & div:nth-child(4) {
    grid-area: d;
    & > svg {
      & rect {
        stroke: transparent;
      }
      & line {
        stroke: hsl(var(--yz13-foreground));
      }
      & path {
        stroke: hsl(var(--yz13-foreground));
        fill: hsl(var(--yz13-neutral-400));
        @apply transition-colors;
      }
      & path:hover {
        fill: hsl(var(--yz13-neutral-600));
      }
    }
  }
  & div:nth-child(5) {
    grid-area: e;
    & > svg {
      & g > rect {
        stroke: transparent;
      }
      & g > path {
        fill: hsl(var(--yz13-foreground));
      }
    }
  }
  /* & > div {
    height: calc(100% * (1 / 4) - (var(--spacing) / 2));
  }
  & > div:last-of-type {
    height: calc(100% * (2 / 4) - (var(--spacing)));
  } */
  @apply grid grid-cols-4 grid-rows-4 gap-6;
}

#home-illustration {
  & #cover {
    width: 100%;
    height: 100%;
    & > #top {
      & line {
        stroke: hsl(var(--yz13-foreground));
      }
      & circle {
        stroke: hsl(var(--yz13-foreground));
        fill: hsl(var(--yz13-neutral-400));
      }
      & rect {
        stroke: hsl(var(--yz13-foreground));
        /* fill: hsl(var(--yz13-foreground)); */
      }
      & path {
        stroke: hsl(var(--yz13-foreground));
        fill: hsl(var(--yz13-neutral-400));
      }
    }
    & > #middle {
      & #web-1,
      #web-3 {
        fill: hsl(var(--yz13-foreground));
      }
      & #web-2 {
        fill: hsl(var(--yz13-neutral-600));
      }
      & rect {
        stroke: hsl(var(--yz13-foreground));
      }
      & line {
        stroke: hsl(var(--yz13-foreground));
      }
      & circle {
        fill: hsl(var(--yz13-neutral-400));
        stroke: hsl(var(--yz13-foreground));
      }
      & #y-letter {
        fill: hsl(var(--yz13-neutral-400));
        stroke: hsl(var(--yz13-foreground));
      }
    }
    & > #bottom {
      & rect {
        stroke: hsl(var(--yz13-foreground));
      }
      & path {
        fill: hsl(var(--yz13-foreground));
      }
    }
  }
}
